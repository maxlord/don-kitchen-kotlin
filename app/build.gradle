import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
// apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'kotlin-kapt'

android {
	compileSdkVersion Integer.parseInt(ver.compileSdk)
	buildToolsVersion ver.buildTools

	defaultConfig {
		minSdkVersion Integer.parseInt(ver.minSdk)
		targetSdkVersion Integer.parseInt(ver.targetSdk)

		applicationId "ru.ls.donkitchen"
		versionCode 1501
		versionName "1.5.1"
		multiDexEnabled true

		buildConfigField "int", "DATABASE_VERSION", "1";
		buildConfigField "String", "API_URL", "\"http://dk.lord-services.ru/api/v1/\""
		buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
	}

	signingConfigs {
		debug {

		}

		release {
			 storeFile file(System.getenv("LS_APP_PRIVATE_KEY"))
			 keyAlias System.getenv("LS_APP_ALIAS")
			 storePassword System.getenv("LS_APP_STORE_PW")
			 keyPassword System.getenv("LS_APP_PW")
		}
	}

	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

	packagingOptions {
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE.txt'
		exclude 'META-INF/services/javax.annotation.processing.Processor'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/rxjava.properties'
	}

	lintOptions {
		abortOnError false
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
	}

	configurations.all {
		resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
	}
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	testImplementation "junit:junit:$ver.junit"

	implementation project(":core")
	implementation project(":data")
	implementation project(":domain")

	implementation "com.android.support:multidex:$ver.multiDex"
	implementation supportDependencies.appCompat
	implementation supportDependencies.supportV4
	implementation supportDependencies.supportV13
	implementation supportDependencies.recyclerView
	implementation supportDependencies.cardView
	implementation supportDependencies.design

	implementation googlePlayServices.base
	implementation googlePlayServices.fcm
	implementation "com.google.firebase:firebase-core:$ver.playServices"

	implementation "org.jetbrains.kotlin:kotlin-stdlib:$ver.kotlin"
	implementation "com.google.dagger:dagger:$ver.dagger"
	kapt "com.google.dagger:dagger-compiler:$ver.dagger"
//	provided 'org.glassfish:javax.annotation:10.0-b28'
//	 javax.annotation:javax.annotation-api:1.2
	implementation "com.jakewharton.timber:timber:$ver.timber"

	// Rx
	implementation "io.reactivex.rxjava2:rxkotlin:$ver.rxKotlin"
	implementation "io.reactivex.rxjava2:rxandroid:$ver.rxAndroid"
	implementation 'com.trello:rxlifecycle:0.8.0'
	implementation 'com.trello:rxlifecycle-components:0.8.0'
	implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$ver.rxBinding"
	implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$ver.rxBinding"

	// Retrofit
	implementation "com.squareup.retrofit2:retrofit:$ver.retrofit"
	implementation "com.squareup.retrofit2:converter-gson:$ver.retrofit"
	implementation "com.squareup.retrofit2:adapter-rxjava2:$ver.retrofit"
	// OkHttp
	implementation "com.squareup.okhttp3:okhttp:$ver.okHttp"
	implementation "com.squareup.okhttp3:logging-interceptor:$ver.okHttpInterceptor"

	// Anko
	implementation 'org.jetbrains.anko:anko-sdk15:0.9' // sdk19, sdk21, sdk23 are also available
	implementation 'org.jetbrains.anko:anko-appcompat-v7:0.9' // For appcompat-v7 bindings

	implementation("com.crashlytics.sdk.android:crashlytics:$ver.crashlytics@aar") {
		transitive = true
	}

	implementation 'com.github.rey5137:material:1.2.2'

	// Glide
	implementation "com.github.bumptech.glide:glide:$ver.glide"

	implementation "com.arello-mobile:moxy:$ver.moxy"
	kapt "com.arello-mobile:moxy-compiler:$ver.moxy"
	implementation "com.arello-mobile:moxy-app-compat:$ver.moxy"

	implementation "ru.terrakok.cicerone:cicerone:$ver.cicerone"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$ver.kotlin"
	implementation 'jp.wasabeef:glide-transformations:2.0.2'
	testImplementation 'org.mockito:mockito-core:2.2.29'
}

apply from: '../publishRelease.gradle'

static def buildTime() {
	def df = new SimpleDateFormat("dd.MM.yyyy")
	df.setTimeZone(TimeZone.getTimeZone("UTC"))

	return df.format(new Date())
}

apply plugin: 'com.google.gms.google-services'